{"version":3,"file":"persian-tools.umd.js","sources":["../src/modules/digits.js","../src/modules/isPersian.js","../src/modules/toPersianChars.js","../src/helpers/index.js","../src/modules/removeCommas.js","../src/modules/NumberToWords.js","../src/modules/addCommas.js","../src/modules/WordsToNumber.js","../src/modules/nationalId.js","../src/modules/getPlaceByIranNationalId.js","../src/modules/verifyCardNumber.js","../src/modules/getBankNameFromCardNumber.js","../src/modules/URLfix.js","../src/modules/SortText.js","../src/index.js"],"sourcesContent":["const faNums = \"۰۱۲۳۴۵۶۷۸۹\";\nconst arNums = \"٠١٢٣٤٥٦٧٨٩\";\n\n/** digitsEnToFa\n *\n *  Description: Takes a string made of English digits only, and\n *  returns a string that represents the same number but with\n *  Persian digits\n *\n */\nexport function digitsEnToFa(str) {\n\tif (!str) return;\n\n\tstr = str.toString();\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet replaceEntoFa = new RegExp(\"\" + i, \"g\");\n\t\tstr = str.toString().replace(replaceEntoFa, faNums[i]);\n\t}\n\n\treturn str;\n}\n\n/** digitsFaToEn\n *\n *  Description: Takes a string made of English digits only, and\n *  returns a string that represents the same number but with\n *  Persian digits\n *\n */\nexport function digitsFaToEn(str) {\n\tif (!str) return;\n\n\tstr = str.toString();\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet replaceFaToEn = new RegExp(faNums[i], \"g\");\n\t\tstr = str.replace(replaceFaToEn, i);\n\t}\n\n\treturn str;\n}\n\n/** digitsArToFa\n *\n *  Description: Takes a string that contains digits, and\n *  replaces all Arabic digits with the corresponding Persian\n *  digits\n *\n */\nexport function digitsArToFa(str) {\n\tif (!str) return;\n\n\tstr = str.toString();\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet replaceArabicToPersian = new RegExp(arNums[i], \"g\");\n\t\tstr = str.replace(replaceArabicToPersian, faNums[i]);\n\t}\n\n\treturn str;\n}\n\n/** digitsArToEn\n *\n *  Description: Takes a string that contains digits, and\n *  replaces all Arabic digits with the corresponding English\n *  digits\n *\n */\nexport function digitsArToEn(str) {\n\tif (!str) return;\n\n\tstr = str.toString();\n\tfor (let i = 0; i < 10; i++) {\n\t\tlet replaceArabicToEnglish = new RegExp(arNums[i], \"g\");\n\t\tstr = str.replace(replaceArabicToEnglish, i);\n\t}\n\n\treturn str;\n}\n","/**\n * @param {string}\n * @return {boolean}\n */\nconst isPersian = str => {\n\tif (!str) return;\n\n\tconst letters = [];\n\tfor (let i = 0; i <= str.length; i++) {\n\t\tletters[i] = str.substring(i - 1, i);\n\t\tif (letters[i].charCodeAt() > 255) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nexport default isPersian;\n","/* eslint-disable */\n\n/** toPersianChars\n *\n *  Description: Replaces all instances of ي and ك withی and ک,\n *  respectively. It should not make any ch anges to Arabic text\n *  surrounded by appropriate templates.\n *\n */\nfunction toPersianChars(str) {\n\tif (!str) return;\n\n\tlet old = \"\";\n\n\t// Do not touch the text inside links, images, categories\n\twhile (old != str) {\n\t\told = str;\n\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|بە عەرەبی|بە ئویغوری)\\|(.*?)ى(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2\\u200b\\u200b\\u200bی\\u200b\\u200b\\u200b$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(بە سیندی)\\|(.*?)ه(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2\\u200f\\u200f\\u200fھ\\u200f\\u200f\\u200f$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(بە پەشتۆ)\\|(.*?)ي(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2\\u200b\\u200b\\u200bی\\u200b\\u200b\\u200b$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[([^\\]]*?\\:[^\\]]*?)ي(.*?)\\]\\]/g,\n\t\t\t\"[[$1\\u200f\\u200f\\u200fی\\u200f\\u200f\\u200f$2]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[([^\\]]*?\\:[^\\]]*?)ى(.*?)\\]\\]/g,\n\t\t\t\"[[$1\\u200b\\u200b\\u200bی\\u200b\\u200b\\u200b$2]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[([^\\]]*?\\:[^\\]]*?)ك(.*?)\\]\\]/g,\n\t\t\t\"[[$1\\u200f\\u200f\\u200fک\\u200f\\u200f\\u200f$2]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[([^\\]]*?\\:[^\\]]*?)ه‌(.*?)\\]\\]/g,\n\t\t\t\"[[$1\\u200f\\u200f\\u200fە\\u200f\\u200f\\u200f$2]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[([^\\]]*?\\:[^\\]]*?)ه(.*?)\\]\\]/g,\n\t\t\t\"[[$1\\u200f\\u200f\\u200fھ\\u200f\\u200f\\u200f$2]]\"\n\t\t);\n\t}\n\n\t// Replace every ي and ك with ی and ک, respectively\n\t// NOTE: This WILL mess with images, links, categories\n\t// but we will undo it later\n\tstr = str.replace(/ي/g, \"ی\");\n\tstr = str.replace(/ك/g, \"ک\");\n\tstr = str.replace(/ى/g, \"ی\");\n\tstr = str.replace(new RegExp(\"ه($|[^ء-يٱ-ە])\", \"g\"), \"ە$1\");\n\tstr = str.replace(/ە‌/g, \"ە\");\n\tstr = str.replace(/ه/g, \"ھ\");\n\n\t// NOTE: This will also undo changes to categories which is not good\n\t// but we will undo that later\n\tstr = str.replace(/\\u200f\\u200f\\u200fی\\u200f\\u200f\\u200f/g, \"ي\");\n\tstr = str.replace(/\\u200b\\u200b\\u200bی\\u200b\\u200b\\u200b/g, \"ى\");\n\tstr = str.replace(/\\u200f\\u200f\\u200fک\\u200f\\u200f\\u200f/g, \"ك\");\n\tstr = str.replace(/\\u200f\\u200f\\u200fه\\u200f\\u200f\\u200f/g, \"ه‌\");\n\tstr = str.replace(/\\u200f\\u200f\\u200fھ\\u200f\\u200f\\u200f/g, \"ه\");\n\n\told = \"\";\n\t// Replace every ي and ك in categories with ی and ک, respectively\n\twhile (old != str) {\n\t\told = str;\n\t\tstr = str.replace(\n\t\t\t/\\[\\[(پۆل|[Cc]ategory):(.*?)(ى|ي)(.*?)\\]\\]/g,\n\t\t\t\"[[$1:$2ی$4]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[(پۆل|[Cc]ategory):(.*?)ك(.*?)\\]\\]/g,\n\t\t\t\"[[$1:$2ک$3]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[(پۆل|[Cc]ategory):(.*?)ه‌(.*?)\\]\\]/g,\n\t\t\t\"[[$1:$2$3ە]]\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\[\\[(پۆل|[Cc]ategory):(.*?)ه(.*?)\\]\\]/g,\n\t\t\t\"[[$1:$2ھ$3]]\"\n\t\t);\n\t}\n\n\t// Finally, replace every ی and ک in Arabic text with ي and ك, respectively\n\told = \"\";\n\twhile (old != str) {\n\t\told = str;\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|سەرەتای عەرەبی)\\}\\}([^\\}]*)ی([^\\{]*)\\{\\{کۆتایی\\sعەرەبی\\}\\}/g,\n\t\t\t\"{{$1}}$2ي$3{{کۆتایی عەرەبی}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|سەرەتای عەرەبی)\\}\\}([^\\}]*)ک([^\\{]*)\\{\\{کۆتایی\\sعەرەبی\\}\\}/g,\n\t\t\t\"{{$1}}$2ك$3{{کۆتایی عەرەبی}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|سەرەتای عەرەبی)\\}\\}([^\\}]*)ە([^\\{]*)\\{\\{کۆتایی\\sعەرەبی\\}\\}/g,\n\t\t\t\"{{$1}}$2ه$3{{کۆتایی عەرەبی}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|سەرەتای عەرەبی)\\}\\}([^\\}]*)ھ([^\\{]*)\\{\\{کۆتایی\\sعەرەبی\\}\\}/g,\n\t\t\t\"{{$1}}$2ه$3{{کۆتایی عەرەبی}}\"\n\t\t);\n\t\tstr = str.replace(/\\{\\{(بە پەشتۆ)\\|(.*?)ى(.*?)\\}\\}/g, \"{{$1|$2ي$3}}\");\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|بە عەرەبی|بە سیندی|بە ئویغوری)\\|(.*?)ی(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2ي$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|بە عەرەبی|بە ئویغوری)\\|(.*?)ک(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2ك$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|بە عەرەبی|فارسی|بە فارسی|ن.فارسی|بە پەشتۆ)\\|(.*?)ە(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2ه$3}}\"\n\t\t);\n\t\tstr = str.replace(\n\t\t\t/\\{\\{(عەرەبی|بە عەرەبی|فارسی|بە فارسی|ن.فارسی|بە پەشتۆ)\\|(.*?)ھ(.*?)\\}\\}/g,\n\t\t\t\"{{$1|$2ه$3}}\"\n\t\t);\n\t}\n\n\treturn str;\n}\n\nexport default toPersianChars;\n","const trim = str => str.replace(/^\\s+|\\s+$/g, \"\");\nconst replaceArray = (string, find) => {\n\tconst pattern = new RegExp(Object.keys(find).join(\"|\"), \"gi\");\n\tstring = string.replace(pattern, matched => {\n\t\treturn find[matched];\n\t});\n\treturn string;\n};\n\nexport { trim, replaceArray };\n","/**\n * Remove all commas in String\n * @param  {[number]} number\n * @return {[string]}\n */\nconst removeCommas = number => {\n\tif (!number) {\n\t\treturn;\n\t}\n\n\tif (number.toString(16).indexOf(\",\") !== -1) {\n\t\tnumber = number.replace(/,\\s?/g, \"\");\n\t}\n\n\treturn typeof number === \"number\" ? number : parseInt(number, 10);\n};\n\nexport default removeCommas;\n","import { trim } from \"../helpers\";\nimport removeCommas from \"./removeCommas\";\n\n// <Refrence path=\"https://fa.wikipedia.org/wiki/۱۰۰۰۰۰۰۰۰۰_(عدد)\" />\n\nconst config = {\n\tscale: [\"\", \"هزار\", \"میلیون\", \"میلیارد\"]\n};\n\nconst numberToWord = {};\n\nnumberToWord[0] = \"\";\nnumberToWord[1] = \"یک\";\nnumberToWord[2] = \"دو\";\nnumberToWord[3] = \"سه\";\nnumberToWord[4] = \"چهار\";\nnumberToWord[5] = \"پنج\";\nnumberToWord[6] = \"شش\";\nnumberToWord[7] = \"هفت\";\nnumberToWord[8] = \"هشت\";\nnumberToWord[9] = \"نه\";\nnumberToWord[10] = \"ده\";\nnumberToWord[11] = \"یازده\";\nnumberToWord[12] = \"دوازده\";\nnumberToWord[13] = \"سیزده\";\nnumberToWord[14] = \"چهارده\";\nnumberToWord[15] = \"پانزده\";\nnumberToWord[16] = \"شانزده\";\nnumberToWord[17] = \"هفده\";\nnumberToWord[18] = \"هجده\";\nnumberToWord[19] = \"نوزده\";\nnumberToWord[20] = \"بیست\";\nnumberToWord[30] = \"سی\";\nnumberToWord[40] = \"چهل\";\nnumberToWord[50] = \"پنجاه\";\nnumberToWord[60] = \"شصت\";\nnumberToWord[70] = \"هفتاد\";\nnumberToWord[80] = \"هشتاد\";\nnumberToWord[90] = \"نود\";\nnumberToWord[100] = \"صد\";\nnumberToWord[200] = \"دویست\";\nnumberToWord[300] = \"سیصد\";\nnumberToWord[400] = \"چهار صد\";\nnumberToWord[500] = \"پانصد\";\nnumberToWord[600] = \"شش صد\";\nnumberToWord[700] = \"هفت صد\";\nnumberToWord[800] = \"هشت صد\";\nnumberToWord[900] = \"نه صد\";\n\n/**\n * toWords, Convert Numbers to Persian Text\n * @param  {String} number\n * @return {Number|String}\n */\nconst toWords = number => {\n\tlet unit = 100;\n\tlet result = \"\";\n\n\twhile (unit > 0) {\n\t\tif (Math.floor(number / unit) * unit !== 0) {\n\t\t\tif (number in numberToWord) {\n\t\t\t\tresult += numberToWord[number];\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tresult += numberToWord[Math.floor(number / unit) * unit] + \" و \";\n\t\t\t\tnumber %= unit;\n\t\t\t}\n\t\t}\n\t\tunit = Math.floor(unit / 10);\n\t}\n\treturn result;\n};\n\nconst NumberToWords = number => {\n\tif (!number) return;\n\n\tif (number === \"\") {\n\t\treturn \"\";\n\t}\n\tif (number === 0) {\n\t\treturn \"۰\";\n\t}\n\n\tconst base = 1000;\n\n\tlet result = [];\n\n\tnumber = removeCommas(number);\n\n\tconst isNegative = number < 0;\n\tnumber = isNegative ? number * -1 : number;\n\n\twhile (number > 0) {\n\t\tresult.push(toWords(number % base));\n\t\tnumber = Math.floor(number / base);\n\t}\n\tif (result.length > 4) {\n\t\treturn \"\";\n\t}\n\n\tfor (let i = 0; i < result.length; i++) {\n\t\tif (result[i] !== \"\") {\n\t\t\tresult[i] += \" \" + config.scale[i] + \" و \";\n\t\t}\n\t}\n\tresult.reverse();\n\n\tlet words = result.join(\"\");\n\twhile (words.endsWith(\" و \")) {\n\t\twords = words.slice(0, -3);\n\t}\n\n\treturn trim(isNegative ? `منفی ${words}` : words);\n};\n\nexport default NumberToWords;\n","import isPersian from \"./isPersian\";\nimport { digitsFaToEn } from \"./digits\";\n\n/**\n * Add Commas into number\n * @method addCommas\n * @param   {Number}  number [Number, like: 300000]\n * @return  {String}  \t\t [Returned String, like: 30,000]\n */\nconst addCommas = number => {\n\tif (!number) return;\n\n\tnumber = \"\" + number;\n\tnumber = isPersian(number) ? digitsFaToEn(number) : number;\n\n\treturn number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\n\nexport default addCommas;\n","import addCommasFn from \"./addCommas\";\nimport { replaceArray } from \"../helpers\";\nimport { digitsFaToEn, digitsEnToFa } from \"./digits\";\n\n// <Refrence path='https://fa.wikipedia.org/wiki/الگو:عدد_به_حروف/توضیحات' />\n// https://fa.wikipedia.org/wiki/۱۰۰۰۰۰۰۰۰۰_(عدد)\n\nclass WordsToNumber {\n\tconstructor(words) {\n\t\tthis.units = {\n\t\t\tصفر: 0,\n\t\t\tیک: 1,\n\t\t\tدو: 2,\n\t\t\tسه: 3,\n\t\t\tچهار: 4,\n\t\t\tپنج: 5,\n\t\t\tشش: 6,\n\t\t\tشیش: 6,\n\t\t\tهفت: 7,\n\t\t\tهشت: 8,\n\t\t\tنه: 9,\n\t\t\tده: 10,\n\t\t\tیازده: 11,\n\t\t\tدوازده: 12,\n\t\t\tسیزده: 13,\n\t\t\tچهارده: 14,\n\t\t\tپانزده: 15,\n\t\t\tشانزده: 16,\n\t\t\tهفده: 17,\n\t\t\tهجده: 18,\n\t\t\tنوزده: 19,\n\t\t\tبیست: 20,\n\t\t\tسی: 30,\n\t\t\tچهل: 40,\n\t\t\tپنجاه: 50,\n\t\t\tشصت: 60,\n\t\t\tهفتاد: 70,\n\t\t\tهشتاد: 80,\n\t\t\tنود: 90\n\t\t};\n\n\t\tthis.adjective = {\n\t\t\tصد: 100,\n\t\t\tیکصد: 100,\n\t\t\tدویست: 200,\n\t\t\tسیصد: 300,\n\t\t\tچهارصد: 400,\n\t\t\tپانصد: 500,\n\t\t\tششصد: 600,\n\t\t\tهفتصد: 700,\n\t\t\tهشتصد: 800,\n\t\t\tنهصد: 900\n\t\t};\n\n\t\tthis.magnitudes = {\n\t\t\tهزار: 1000,\n\t\t\tمیلیون: 1000000,\n\t\t\tبیلیون: 1000000000,\n\t\t\tمیلیارد: 1000000000,\n\t\t\tتریلیون: 1000000000000\n\t\t};\n\n\t\tthis.otherAdjective = {\n\t\t\t\"شیش صد\": \"ششصد\",\n\t\t\t\"شش صد\": \"ششصد\",\n\t\t\t\"هفت صد\": \"هفتصد\",\n\t\t\t\"هشت صد\": \"هشتصد\",\n\t\t\t\"نه صد\": \"نهصد\"\n\t\t};\n\t}\n\t/**\n\t * Convert to numbers\n\t * @method convert\n\t * @param  {String} words         [String of words - like: سی صد پنجاه هزار]\n\t * @param  {String} [digits='en'] [convert number digits to en or fa]\n\t * @return {Number}               [Result - like: 350000]\n\t */\n\tconvert(words, { digits = \"en\", addCommas = false } = {}) {\n\t\tif (!words) return;\n\n\t\tlet numbersConverted = this.compute(this.tokenize(words));\n\n\t\tnumbersConverted = addCommas ? addCommasFn(numbersConverted) : numbersConverted;\n\t\tnumbersConverted = digits === \"fa\" ? digitsEnToFa(numbersConverted) : numbersConverted;\n\n\t\treturn numbersConverted;\n\t}\n\ttokenize(allWords) {\n\t\tlet words = replaceArray(allWords, this.otherAdjective);\n\t\twords = words.replace(new RegExp(\"(مین|م)$\", \"ig\"), \"\");\n\n\t\tlet result = [];\n\n\t\twords.split(\" \").forEach(word => (word === \"و\" ? \"\" : !isNaN(+word) ? result.push(+word) : result.push(word)));\n\n\t\treturn result;\n\t}\n\tcompute(tokens) {\n\t\tlet sum = 0;\n\t\tlet isNegative = false;\n\n\t\ttokens.forEach(token => {\n\t\t\ttoken = digitsFaToEn(token);\n\n\t\t\tif (token === \"منفی\") {\n\t\t\t\tisNegative = true;\n\t\t\t} else if (this.units[token] != null) {\n\t\t\t\tsum += this.units[token];\n\t\t\t} else if (this.adjective[token] != null) {\n\t\t\t\tsum += this.adjective[token];\n\t\t\t} else if (!isNaN(token)) {\n\t\t\t\tsum += parseInt(token, 10);\n\t\t\t} else {\n\t\t\t\tsum *= this.magnitudes[token];\n\t\t\t}\n\t\t});\n\t\treturn isNegative ? sum * -1 : sum;\n\t}\n}\n\nexport default WordsToNumber;\n","/**\n * Check National-id validation\n * @method verifyIranianNationalId\n * @param  {String?}          nationalId [String of national id - like this: 1111111111]\n * @return {Boolean}                    [valid or no]\n */\nfunction verifyIranianNationalId(nationalId) {\n\tif (!nationalId) return;\n\n\tif (nationalId) {\n\t\tlet code = nationalId.toString() || null;\n\n\t\tif (!code.match(/^\\d{10}$/)) return false;\n\t\tcode = (\"0000\" + code).substr(code.length + 4 - 10);\n\n\t\tif (parseInt(code.substr(3, 6), 10) === 0) return false;\n\n\t\tlet lastNumber = parseInt(code.substr(9, 1), 10);\n\t\tlet sum = 0;\n\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tsum += parseInt(code.substr(i, 1), 10) * (10 - i);\n\t\t}\n\n\t\tsum = sum % 11;\n\n\t\treturn (\n\t\t\t(sum < 2 && lastNumber === sum) ||\n\t\t\t(sum >= 2 && lastNumber === 11 - sum)\n\t\t);\n\t}\n}\n\nexport default verifyIranianNationalId;\n","import NationalIdJSON from \"../dummy/nationalId.json\";\nimport ProvincesJSON from \"../dummy/provincesCodes.json\";\n\n/**\n * Get Place by Iranian National-Id\n * @method getPlaceByIranNationalId\n * @param  {String?}                 nationalId [String of national id - like this: 1111111111]\n * @return {Object}                             [If nationalId is valid, function returning an object of details, but nationalId is invalid, return error message]\n */\nfunction getPlaceByIranNationalId(nationalId) {\n\tif (!nationalId) return;\n\n\tif (nationalId && nationalId.length === 10) {\n\t\tlet code = nationalId.toString().substring(0, 3);\n\t\tlet find = NationalIdJSON.filter(row => row.code.indexOf(code) !== -1);\n\n\t\tif (find.length) {\n\t\t\tlet findProvinces = ProvincesJSON.filter(\n\t\t\t\tprovince => province.code === find[0].parentCode\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tcity: find[0].city,\n\t\t\t\tprovince: findProvinces.length\n\t\t\t\t\t? findProvinces[0].city\n\t\t\t\t\t: \"unkown\",\n\t\t\t\tcodes:\n\t\t\t\t\tfind[0].code.indexOf(\"-\") !== -1\n\t\t\t\t\t\t? find[0].code.split(\"-\")\n\t\t\t\t\t\t: [find[0].code]\n\t\t\t};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport default getPlaceByIranNationalId;\n","function verifyCardNumber(digits) {\n\tif (!digits) return;\n\n\tdigits = digits.toString();\n\n\tconst length = digits.length;\n\tif (\n\t\tlength < 16 ||\n\t\tparseInt(digits.substr(1, 10), 10) === 0 ||\n\t\tparseInt(digits.substr(10, 6), 10) === 0\n\t) {\n\t\treturn false;\n\t}\n\n\tlet sum = 0;\n\tlet even, subDigit;\n\tfor (let i = 0; i < 16; i++) {\n\t\teven = i % 2 === 0 ? 2 : 1;\n\t\tsubDigit = parseInt(digits.substr(i, 1), 10) * even;\n\t\tsum += subDigit > 9 ? subDigit - 9 : subDigit;\n\t}\n\treturn sum % 10 === 0;\n}\n\nexport default verifyCardNumber;\n","import banksCode from \"../dummy/banksCode.json\";\n\nfunction getBankNameFromCardNumber(digits) {\n\tif (!digits) return;\n\n\tif (digits && digits.toString().length === 16) {\n\t\tlet code = digits.toString().substr(0, 6);\n\t\tlet findBank = banksCode.find(bank => bank.code === code);\n\n\t\tif (findBank) {\n\t\t\treturn findBank.name;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport default getBankNameFromCardNumber;\n","/**\n * Used for fix Persian characters in URL\n *\n * @method URLfix\n * @param {String} value\n * @return {String} Fixed String\n */\nexport default value => {\n\tif (!value) {\n\t\treturn;\n\t}\n\n\t// Replace every %20 with _ to protect them from decodeURI\n\tlet old = \"\";\n\twhile (old !== value) {\n\t\told = value;\n\t\tvalue = value.replace(\n\t\t\t/(http\\S+?)%20/g,\n\t\t\t\"$1\\u200c\\u200c\\u200c_\\u200c\\u200c\\u200c\"\n\t\t);\n\t}\n\n\t// Decode URIs\n\t// NOTE: This would convert all %20's to _'s which could break some links\n\t// but we will undo that later on\n\tvalue = value.replace(/(http\\S+)/g, (s, p) => decodeURI(p));\n\n\t// Revive all instances of %20 to make sure no links is broken\n\tvalue = value.replace(/\\u200c\\u200c\\u200c_\\u200c\\u200c\\u200c/g, \"%20\");\n\n\treturn value;\n};\n","/** SortText\n *\n *  Description: Takes a piece of text in Persian which contains\n *  several lines (separated by the newline character), and sorts\n *  the lines alphabetically, with respect to their first character.\n *\n */\nfunction SortText(str) {\n\tif (!str) return;\n\n\tconst sortPreparation = instr => {\n\t\t// solve persian problem on sorting by replace characters in strings\n\t\treturn instr\n\t\t\t.replace(/ی/g, \"ي\")\n\t\t\t.replace(/ک/g, \"ك\")\n\t\t\t.replace(/ھ/g, \"ه\")\n\t\t\t.replace(/پ/g, \"بی\")\n\t\t\t.replace(/چ/g, \"جی\")\n\t\t\t.replace(/ڕ/g, \"ری\")\n\t\t\t.replace(/ژ/g, \"زی\")\n\t\t\t.replace(/ڤ/g, \"فی\")\n\t\t\t.replace(/ڵ/g, \"لی\")\n\t\t\t.replace(/گ/g, \"كی\")\n\t\t\t.replace(/ۆ/g, \"وی\")\n\t\t\t.replace(/ە/g, \"هی\")\n\t\t\t.replace(/ێ/g, \"يي\");\n\t};\n\n\tlet temp = str.split(\" \");\n\ttemp.sort((a, b) => {\n\t\tconst keyA = sortPreparation(a);\n\t\tconst keyB = sortPreparation(b);\n\n\t\tif (keyA < keyB) return -1;\n\t\tif (keyA > keyB) return 1;\n\n\t\treturn 0;\n\t});\n\n\treturn temp;\n}\n\nexport default SortText;\n","// Digits Converter\nimport {\n  digitsEnToFa,\n  digitsFaToEn,\n  digitsArToFa,\n  digitsArToEn\n} from \"./modules/digits\";\n// check and convert persian string\nimport isPersian from \"./modules/isPersian\";\nimport toPersianChars from \"./modules/toPersianChars\";\n// String and Number Converter\nimport NumberToWords from \"./modules/NumberToWords\";\nimport WordsToNumber from \"./modules/WordsToNumber\";\n// Add and Remove Commas\nimport addCommas from \"./modules/addCommas\";\nimport removeCommas from \"./modules/removeCommas\";\n// Iran National-ID\nimport verifyIranianNationalId from \"./modules/nationalId\";\nimport getPlaceByIranNationalId from \"./modules/getPlaceByIranNationalId\";\n// Verify Card Number and Get Bank Name from Card-Number\nimport verifyCardNumber from \"./modules/verifyCardNumber\";\nimport getBankNameFromCardNumber from \"./modules/getBankNameFromCardNumber\";\n// Fix and sort persian string\nimport URLfix from \"./modules/URLfix\";\nimport SortText from \"./modules/SortText\";\n\nwindow.NumberToWords = NumberToWords;\nwindow.WordsToNumber = WordsToNumber;\nwindow.isPersian = isPersian;\nwindow.toPersianChars = toPersianChars;\nwindow.addCommas = addCommas;\nwindow.removeCommas = removeCommas;\nwindow.digitsEnToFa = digitsEnToFa;\nwindow.digitsFaToEn = digitsFaToEn;\nwindow.digitsArToFa = digitsArToFa;\nwindow.digitsArToEn = digitsArToEn;\nwindow.verifyIranianNationalId = verifyIranianNationalId;\nwindow.getPlaceByIranNationalId = getPlaceByIranNationalId;\nwindow.verifyCardNumber = verifyCardNumber;\nwindow.getBankNameFromCardNumber = getBankNameFromCardNumber;\nwindow.URLfix = URLfix;\nwindow.SortTex = SortText;\n\nexport {\n  // String and Number Converter\n  NumberToWords,\n  WordsToNumber,\n  // check and convert persian string\n  isPersian,\n  toPersianChars,\n  // Add and Remove Commas\n  addCommas,\n  removeCommas,\n  // Digits\n  digitsEnToFa,\n  digitsFaToEn,\n  digitsArToFa,\n  digitsArToEn,\n  // Iran National-ID\n  verifyIranianNationalId,\n  getPlaceByIranNationalId,\n  // Verify Card Number and Get Bank Name from Card-Number\n  verifyCardNumber,\n  getBankNameFromCardNumber,\n  // Fix and sort persian string\n  URLfix,\n  SortText\n};\n"],"names":["faNums","arNums","digitsEnToFa","str","toString","i","replaceEntoFa","RegExp","replace","digitsFaToEn","replaceFaToEn","digitsArToFa","replaceArabicToPersian","digitsArToEn","replaceArabicToEnglish","isPersian","letters","length","substring","charCodeAt","toPersianChars","old","trim","replaceArray","string","find","pattern","Object","keys","join","matched","removeCommas","number","indexOf","parseInt","config","scale","numberToWord","toWords","unit","result","Math","floor","NumberToWords","base","isNegative","push","reverse","words","endsWith","slice","addCommas","WordsToNumber","units","صفر","یک","دو","سه","چهار","پنج","شش","شیش","هفت","هشت","نه","ده","یازده","دوازده","سیزده","چهارده","پانزده","شانزده","هفده","هجده","نوزده","بیست","سی","چهل","پنجاه","شصت","هفتاد","هشتاد","نود","adjective","صد","یکصد","دویست","سیصد","چهارصد","پانصد","ششصد","هفتصد","هشتصد","نهصد","magnitudes","هزار","میلیون","بیلیون","میلیارد","تریلیون","otherAdjective","digits","numbersConverted","compute","tokenize","addCommasFn","allWords","split","forEach","word","isNaN","tokens","sum","token","verifyIranianNationalId","nationalId","code","match","substr","lastNumber","getPlaceByIranNationalId","NationalIdJSON","filter","row","findProvinces","ProvincesJSON","province","parentCode","city","codes","verifyCardNumber","even","subDigit","getBankNameFromCardNumber","findBank","banksCode","bank","name","value","s","p","decodeURI","SortText","sortPreparation","instr","temp","sort","a","b","keyA","keyB","window","URLfix","SortTex"],"mappings":"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"}